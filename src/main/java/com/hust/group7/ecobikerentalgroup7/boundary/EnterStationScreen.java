/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hust.group7.ecobikerentalgroup7.boundary;

import com.google.zxing.FormatException;
import com.hust.group7.ecobikerentalgroup7.Constants;
import com.hust.group7.ecobikerentalgroup7.DataBase;
import com.hust.group7.ecobikerentalgroup7.Entity.Bike;
import com.hust.group7.ecobikerentalgroup7.Entity.Cost;
import com.hust.group7.ecobikerentalgroup7.Entity.Station;
import com.hust.group7.ecobikerentalgroup7.Entity.Transaction;
import com.hust.group7.ecobikerentalgroup7.Entity.User;
import com.hust.group7.ecobikerentalgroup7.MainEntry;
import com.hust.group7.ecobikerentalgroup7.controller.RentBikeController;
import com.hust.group7.ecobikerentalgroup7.controller.ReturnBikeController;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;

public class EnterStationScreen extends javax.swing.JFrame {

    /**
     * Creates new form RentBikeScreen
     */
    private JFrame backScreen;
    private User user;
    public RentBikeController rentBikeController;
    public ReturnBikeController returnBikeController;
    private Transaction transaction;
    private DataBase db = new DataBase();
    private Bike bike;
    private long money;
    private ArrayList<Station> arrStation;

    public EnterStationScreen(Transaction transaction, User user, Bike bike, JFrame backScreen, long money) throws SQLException {
        initComponents();
        this.transaction = transaction;
        this.user = user;
        this.money = money;
        this.bike = bike;
        this.backScreen = backScreen;
        rentBikeController = new RentBikeController();
        addStation();
    }

    private int getStationIDByName(String stationName) {
        int ID = -1;
        for (Station x : arrStation) {
            if (x.getName().equals(stationName)) {
                ID = x.getStationId();
                break;
            }
        }
        return ID;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRent = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbbStation = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scan Code");
        setResizable(false);

        btnRent.setText("Return");
        btnRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRentActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Return Station :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cbbStation, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(backBtn)
                .addGap(30, 30, 30)
                .addComponent(btnRent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbbStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRent)
                    .addComponent(backBtn))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void addStation() {
        arrStation = new ArrayList<>();
        try {
            String sqlString = "select * from stations";
            ResultSet rs = db.query(sqlString);
            while (rs.next()) {
                Station station = new Station();
                station.setAddress(rs.getString("address"));
                station.setStationId(rs.getInt("id"));
                station.setName(rs.getString("name"));
                station.setDistance(rs.getInt("distance_to_walk"));
                arrStation.add(station);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        for (Station x : arrStation) {
            cbbStation.addItem(x.getName());
        }
    }

    private void btnRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRentActionPerformed
        String station = cbbStation.getSelectedItem().toString();
        //set bike status
        String sql = "UPDATE bikes SET status = 0, station_id = " + getStationIDByName(station) + " WHERE id = " + bike.getBikeId();
        try {
            db.update(sql);
            //set user status
            sql = "UPDATE users SET status = 0 WHERE id = " + user.getUserId();
            db.update(sql);
            //set endtime transactions, set deposit
            sql = "UPDATE `tkxdpm`.`transactions` SET `end_time` = '" + transaction.getEndTime() + "', `deposit` = '" + money + "'"
                    + ", `status` = 0 WHERE (`id` = '" + transaction.getTransactionId() + "')";
            db.update(sql);
            //return money account
            sql = "SELECT * FROM \n"
                    + "transactions t INNER JOIN payment_methods pm ON t.payment_method_id = pm.payment_id\n"
                    + "INNER JOIN virtual_accounts va ON va.account_id = pm.virtual_account_id\n"
                    + " WHERE t.id = " + transaction.getTransactionId();
            ResultSet rs = db.query(sql);
            rs.next();

            float moneyReturn = rs.getFloat("amount_money") + transaction.getDeposit() - this.money;
            System.out.println(rs.getFloat("amount_money") + "---" + transaction.getDeposit() + "====" + this.money);
            sql = "UPDATE virtual_accounts SET amount_money = " + moneyReturn + " WHERE account_id = " + rs.getInt("account_id");
            db.update(sql);
            //notify
            JOptionPane.showMessageDialog(this, "Returned!");
            user.setStatus(0);
            MainEntry.move(this, new HomeScreen(this.user, new LoginScreen()));
        } catch (SQLException ex) {
            Logger.getLogger(RentingScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRentActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        MainEntry.move(this, backScreen);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnRent;
    private javax.swing.JComboBox<String> cbbStation;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
